use RetailDb;

--------------------DATA PREPARATION AND UNDERSTANDING--------------------------

--Q1
SELECT * FROM (
SELECT 'CUSTOMER'      AS TABLE_NAME, COUNT(*) AS NO_OF_RECORDS  FROM CUSTOMER UNION ALL        ---5647 ROWS
SELECT 'PROD_CAT_INFO' AS TABLE_NAME, COUNT(*) AS NO_OF_RECORDS  FROM PROD_CAT_INFO UNION ALL   ---23 ROWS 
SELECT 'TRANSACTIONS'  AS TABLE_NAME, COUNT(*) AS NO_OF_RECORDS  FROM TRANSACTIONS              ---23053 ROWS
) TBL_RETAIL


--Q2
SELECT 
COUNT(TRANSACTION_ID) AS CNT_TRANS
FROM TRANSACTIONS
WHERE QTY<0 

--Q3
SELECT
REPLACE(CONVERT(DATE,TRAN_DATE,103),'-','/') AS TRANS_DATE
FROM
TRANSACTIONS



--Q4
SELECT 
DAY(CONVERT(DATE,TRAN_DATE,103))AS TRANS_DATE,
YEAR(CONVERT(DATE,TRAN_DATE,103)) AS TRAN_YEAR,
MONTH(CONVERT(DATE,TRAN_DATE,103)) AS TRAN_MONTH
FROM TRANSACTIONS


--Q5
SELECT PROD_CAT
FROM
PROD_CAT_INFO
WHERE 
PROD_SUBCAT='DIY'

-------------------DATA ANALYSIS---------------------

--Q1 
SELECT TOP 1 Store_type,COUNT(Store_type) AS MAX_TRANSACTION_STORE
FROM 
TRANSACTIONS
GROUP BY 
Store_type
ORDER BY 
MAX_TRANSACTION_STORE DESC


--Q2
SELECT GENDER,
COUNT(GENDER) AS COUNT_GENDER 
FROM 
CUSTOMER
GROUP BY 
GENDER
HAVING GENDER='M' OR GENDER='F'

Select GENDER, AVG(CONVERT(NUMERIC,TOTAL_AMT)) as AMT
FROM Customer as t1
left join TRANSACTIONS AS t2 ON t1.customer_Id =t2.cust_id
GROUP BY
GENDER
HAVING GENDER='M' OR GENDER='F'

--Q3

SELECT TOP 1 CITY_CODE AS CITYCODE_MAX_CUST, COUNT(CUSTOMER_ID) AS MAX_CNT_CUSTOMER
FROM CUSTOMER
GROUP BY
CITY_CODE
ORDER BY 
MAX_CNT_CUSTOMER DESC

--Q4
SELECT PROD_CAT,COUNT(PROD_SUBCAT) AS CNT_SUB_CTGRY
FROM 
PROD_CAT_INFO
GROUP BY 
PROD_CAT
HAVING
PROD_CAT='BOOKS'

--Q5
SELECT TOP 1  MAX(QTY) AS MAX_QUANT_PROD 
FROM 
PROD_CAT_INFO AS P1
RIGHT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE
GROUP BY PROD_SUBCAT

--Q6
SELECT PROD_CAT,SUM(CONVERT(NUMERIC,TOTAL_AMT)) AS TOTAL_AMT 
FROM 
PROD_CAT_INFO AS P1
RIGHT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE
GROUP BY PROD_CAT
HAVING
PROD_CAT='ELECTRONICS' OR PROD_CAT='BOOKS'


--Q7 
SELECT CUST_ID,
COUNT(TRANSACTION_ID) AS CNT_CUST_TRANS
FROM TRANSACTIONS where QTY > 0
GROUP BY 
CUST_ID
HAVING
COUNT(TRANSACTION_ID)>10 


--Q8
SELECT 
SUM(CONVERT(NUMERIC,TOTAL_AMT)) AS TOTAL_AMT
FROM
PROD_CAT_INFO AS P1
LEFT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE 
WHERE (PROD_CAT='CLOTHING' AND STORE_TYPE ='FLAGSHIP STORE') OR (PROD_CAT ='ELECTRONICS' AND STORE_TYPE ='FLAGSHIP STORE')

--Q9
SELECT 
SUM(CONVERT(NUMERIC,TOTAL_AMT)) AS TOTAL_AMT
FROM  CUSTOMER AS C1
LEFT JOIN TRANSACTIONS AS T1 ON C1.CUSTOMER_ID=T1.CUST_ID 
LEFT JOIN PROD_CAT_INFO AS P1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE
WHERE PROD_CAT='ELECTRONICS'  AND GENDER='M'


--Q10 
SELECT TOP 5 *
FROM (
SELECT 
PROD_SUBCAT,
SUM(CONVERT(NUMERIC,TOTAL_AMT))*100/(SELECT SUM(CONVERT(NUMERIC,TOTAL_AMT)) AS SALES FROM  TRANSACTIONS)
AS SALES_AMT
FROM 
PROD_CAT_INFO AS P1
LEFT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE  WHERE CONVERT(NUMERIC,TOTAL_AMT)>0
GROUP BY
PROD_SUBCAT
) T1 LEFT JOIN (
SELECT PROD_SUBCAT,
SUM(CONVERT(NUMERIC,TOTAL_AMT))*100/(SELECT SUM(CONVERT(NUMERIC,TOTAL_AMT)) AS SALES FROM  TRANSACTIONS)
AS RETURN_AMT
FROM 
PROD_CAT_INFO AS P1
LEFT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE  WHERE CONVERT(NUMERIC,TOTAL_AMT)<0
GROUP BY
PROD_SUBCAT
) T2 ON T1.PROD_SUBCAT=T2.PROD_SUBCAT
ORDER BY SALES_AMT





--Q11
SELECT 
CUSTOMER_ID,
DATEDIFF(YEAR, CONVERT(DATE,DOB,103),GETDATE()) AS AGE,
SUM(CONVERT(NUMERIC,TOTAL_AMT)) AS CUST_REVENUE
FROM 
CUSTOMER AS C1
LEFT JOIN TRANSACTIONS AS T1 ON C1.CUSTOMER_ID=T1.CUST_ID 
WHERE ( DATEDIFF(YEAR, CONVERT(DATE,DOB,103),GETDATE()) BETWEEN 25 AND 35 ) AND DATEDIFF(DAY,CONVERT(DATE,TRAN_DATE,103),(SELECT MAX(CONVERT(DATE,TRAN_DATE,103)) FROM TRANSACTIONS))='30'
GROUP BY
CUSTOMER_ID,DATEDIFF(YEAR, CONVERT(DATE,DOB,103),GETDATE())
ORDER BY
CUST_REVENUE DESC 


--Q12
SELECT  TOP 1 PROD_CAT,
MAX(CONVERT(NUMERIC,TOTAL_AMT)) AS RETURN_AMT
FROM 
PROD_CAT_INFO AS P1
LEFT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE 
WHERE  CONVERT(NUMERIC,TOTAL_AMT)<0 AND (DATEDIFF(MONTH,CONVERT(DATE,TRAN_DATE,103),(SELECT MAX(CONVERT(DATE,TRAN_DATE,103)) FROM TRANSACTIONS)))=3
GROUP BY
PROD_CAT
ORDER BY 
RETURN_AMT ASC


 --Q13
SELECT TOP 1 STORE_TYPE,
SUM(CONVERT(NUMERIC,QTY)) AS MAX_QTY,
SUM(CONVERT(NUMERIC,TOTAL_AMT))AS MAX_SALES
FROM 
TRANSACTIONS WHERE CONVERT(NUMERIC,TOTAL_AMT)>0
GROUP BY 
STORE_TYPE
ORDER BY
MAX_QTY DESC,MAX_SALES DESC


--Q14
SELECT
PROD_CAT,
AVG(CONVERT(NUMERIC,TOTAL_AMT)) AS AVERAGE_CTGRY
FROM 
PROD_CAT_INFO AS P1
LEFT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE
GROUP BY 
PROD_CAT
HAVING 
AVG(CONVERT(NUMERIC,TOTAL_AMT)) > (SELECT AVG(CONVERT(NUMERIC,TOTAL_AMT)) FROM TRANSACTIONS)

--Q15
SELECT 
PROD_CAT, 
PROD_SUBCAT,
SUM(CONVERT(NUMERIC,QTY))AS QTY,
AVG(CONVERT(NUMERIC,TOTAL_AMT)) AS AVG_AMT,
SUM(CONVERT(NUMERIC,TOTAL_AMT)) AS SALES_AMT
FROM 
PROD_CAT_INFO AS P1
LEFT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE
GROUP BY 
PROD_CAT,PROD_SUBCAT
HAVING
PROD_CAT IN (SELECT TOP 5 PROD_CAT
FROM 
PROD_CAT_INFO AS P1
LEFT JOIN TRANSACTIONS AS T1 ON P1.PROD_CAT_CODE=T1.PROD_CAT_CODE GROUP BY PROD_CAT ORDER BY SUM(CONVERT(NUMERIC,QTY)) DESC)
ORDER BY
QTY DESC
































 























